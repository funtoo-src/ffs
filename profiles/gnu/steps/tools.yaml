tools:
  defaults:
    template: tools.tmpl
  steps:
    - m4: |
        ./configure \
        --prefix=/tools \
        --build=${CLFS_HOST} \
        --host=${CLFS_TARGET}
        make
        make DESTDIR=${CLFS} install
    - gmp: |
        CC_FOR_BUILD=gcc \
        ./configure \
        --prefix=/tools \
        --build=${CLFS_HOST} \
        --host=${CLFS_TARGET} \
        --enable-cxx
        make
        make DESTDIR=${CLFS} install
    - mpfr: |
        ./configure \
        --prefix=/tools \
        --build=${CLFS_HOST} \
        --host=${CLFS_TARGET}
        make
        make DESTDIR=${CLFS} install
    - mpc: |
        ./configure \
        --prefix=/tools \
        --build=${CLFS_HOST} \
        --host=${CLFS_TARGET}
        make
        make DESTDIR=${CLFS} install
    - zlib: |
        unset CC CXX AR AS RANLIB LD STRIP
        CHOST=${CLFS_TARGET} \
        ./configure \
        --prefix=/tools
        make
        make DESTDIR=${CLFS} install
    - gettext: |
        ./configure \
        --prefix=/tools \
        --build=${CLFS_HOST} \
        --host=${CLFS_TARGET} \
        --without-emacs \
        --disable-shared
        make
        make DESTDIR=${CLFS} install
    - bison: |
        ./configure \
        --prefix=/tools \
        --build=${CLFS_HOST} \
        --host=${CLFS_TARGET}
        make
        make DESTDIR=${CLFS} install
    - binutils: |
        mkdir binutils-build && cd binutils-build
        ../configure \
        --prefix=/tools \
        --build=${CLFS_HOST} \
        --host=${CLFS_TARGET} \
        --target=${CLFS_TARGET} \
        --with-lib-path=${CLFS}/tools/lib \
        --disable-nls \
        --enable-shared \
        --enable-64-bit-bfd \
        --disable-multilib \
        --enable-gold=yes \
        --enable-plugins \
        --with-system-zlib \
        --enable-threads
        make
        make DESTDIR=${CLFS} install
    - gcc: |
        sed -i 's|^RAW_CXX_FOR_TARGET="$CXX_FOR_TARGET|& -nostdinc++|' configure
        mkdir gcc-build && cd gcc-build
        ../configure \
        {%- if arch == "powerpc" %}
        --with-abi=elfv2 \
        --enable-secureplt \
        --enable-decimal-float=no \
        {%- endif %}
        --prefix=/tools \
        --build=${CLFS_HOST} \
        --host=${CLFS_TARGET} \
        --target=${CLFS_TARGET} \
        CC_FOR_TARGET="${CLFS_TARGET}-gcc" \
        --with-build-sysroot=${CLFS} \
        --with-local-prefix=${CLFS}/tools \
        --disable-multilib \
        --enable-languages=c,c++ \
        --with-system-zlib \
        --with-native-system-header-dir=/tools/include \
        --disable-libssp \
        --enable-install-libiberty \
        --disable-libstdcxx-pch \
        --disable-libsanitizer
        make AS_FOR_TARGET="${AS}" \
        LD_FOR_TARGET="${LD}"
        make DESTDIR=${CLFS} install
    - ncurses: |
        sed -i -e "s/INSTALL_OPT_S=\\\"-s/& --strip-program=${STRIP}/" configure
        mkdir ncurses-build && cd ncurses-build
        ../configure \
        --prefix=/tools \
        --with-shared \
        --build=${CLFS_HOST} \
        --host=${CLFS_TARGET} \
        --without-debug \
        --without-ada \
        --enable-overwrite \
        --with-build-cc=gcc \
        --enable-overwrite \
        --with-default-terminfo-dir=/tools/share/terminfo \
        --with-termlib
        make
        make DESTDIR=${CLFS} install
        cd .. && mkdir ncursesw-build && cd ncursesw-build
        ../configure \
        --prefix=/tools \
        --with-shared \
        --build=${CLFS_HOST} \
        --host=${CLFS_TARGET} \
        --without-debug \
        --without-ada \
        --enable-overwrite \
        --with-build-cc=gcc \
        --enable-widec \
        --includedir=/tools/include/ncursesw \
        --with-default-terminfo-dir=/tools/share/terminfo \
        --with-termlib
        make
        make DESTDIR=${CLFS} install
    - bash: |
        cat > config.cache << "BASH_EOF"
        ac_cv_func_mmap_fixed_mapped=yes
        ac_cv_func_strcoll_works=yes
        ac_cv_func_working_mktime=yes
        bash_cv_func_sigsetjmp=present
        bash_cv_getcwd_malloc=yes
        bash_cv_job_control_missing=present
        bash_cv_printf_a_format=yes
        bash_cv_sys_named_pipes=present
        bash_cv_ulimit_maxfds=yes
        bash_cv_under_sys_siglist=yes
        bash_cv_unusable_rtsigs=no
        gt_cv_int_divbyzero_sigfpe=yes
        BASH_EOF
        ./configure \
        --prefix=/tools \
        --build=${CLFS_HOST} \
        --host=${CLFS_TARGET} \
        --without-bash-malloc \
        --cache-file=config.cache
        make
        make DESTDIR=${CLFS} install
        test -x ${CLFS}/tools/bin/bash
        # set up initial shells in correct location for "#!/bin/sh" and "#!/bin/bash" scripts:
        rm -f ${CLFS}/bin/bash ${CLFS}/bin/sh || true
        ln -sf ../tools/bin/bash ${CLFS}/bin/bash
        ln -sf ../tools/bin/bash ${CLFS}/bin/sh
    - bzip2: |
        sed -i \
          -e '/^all/s/ test$//' \
          -e 's|CFLAGS=|&-fPIC |' \
        Makefile
        make CC="${CC}" AR="${AR}" RANLIB="${RANLIB}"
        make PREFIX=${CLFS}/tools install
    - check: |
        ./configure \
        --prefix=/tools \
        --build=${CLFS_HOST} \
        --host=${CLFS_TARGET} \
        --disable-subunit
        make
        make DESTDIR=${CLFS} install
    - coreutils: |
        ./configure \
        --prefix=/tools \
        --build=${CLFS_HOST} \
        --host=${CLFS_TARGET} \
        --enable-install-program=hostname \
        --cache-file=config.cache
        sed -i -e 's/^man1_MANS/#man1_MANS/' Makefile
        make
        make DESTDIR=${CLFS} install
    - diffutils: |
        ./configure \
        --prefix=/tools \
        --build=${CLFS_HOST} \
        --host=${CLFS_TARGET}
        make
        make DESTDIR=${CLFS} install
    - file: |
        ./configure \
        --prefix=/tools \
        --build=${CLFS_HOST} \
        --host=${CLFS_TARGET} \
        --with-pic=yes
        make
        make DESTDIR=${CLFS} install
    - findutils: |
        echo "gl_cv_func_wcwidth_works=yes" > config.cache
        echo "ac_cv_func_fnmatch_gnu=yes" >> config.cache
        ./configure \
        --prefix=/tools \
        --build=${CLFS_HOST} \
        --host=${CLFS_TARGET} \
        --cache-file=config.cache
        make
        make DESTDIR=${CLFS} install
    - gawk: |
        ./configure \
        --prefix=/tools \
        --build=${CLFS_HOST} \
        --host=${CLFS_TARGET}
        make
        make DESTDIR=${CLFS} install
    - grep: |
        ./configure \
        --prefix=/tools \
        --build=${CLFS_HOST} \
        --host=${CLFS_TARGET}
        make
        make DESTDIR=${CLFS} install
    - gzip: |
        ./configure \
        --prefix=/tools \
        --build=${CLFS_HOST} \
        --host=${CLFS_TARGET}
        make
        make DESTDIR=${CLFS} install
    - make: |
        ./configure \
        --prefix=/tools \
        --build=${CLFS_HOST} \
        --host=${CLFS_TARGET} \
        --without-guile
        make
        make DESTDIR=${CLFS} install
    - patch: |
        ./configure \
        --prefix=/tools \
        --build=${CLFS_HOST} \
        --host=${CLFS_TARGET}
        make
        make DESTDIR=${CLFS} install
    - sed: |
        ./configure \
        --prefix=/tools \
        --build=${CLFS_HOST} \
        --host=${CLFS_TARGET}
        make
        make DESTDIR=${CLFS} install
    - tar: |
        cat > config.cache << BASH_EOF
        gl_cv_func_wcwidth_works=yes
        gl_cv_func_btowc_eof=yes
        ac_cv_func_malloc_0_nonnull=yes
        gl_cv_func_mbrtowc_incomplete_state=yes
        gl_cv_func_mbrtowc_nul_retval=yes
        gl_cv_func_mbrtowc_null_arg1=yes
        gl_cv_func_mbrtowc_null_arg2=yes
        gl_cv_func_mbrtowc_retval=yes
        gl_cv_func_wcrtomb_retval=yes
        BASH_EOF
        ./configure \
        --prefix=/tools \
        --build=${CLFS_HOST} \
        --host=${CLFS_TARGET} \
        --cache-file=config.cache
        make
        make DESTDIR=${CLFS} install
    - texinfo: |
        ./configure \
        --prefix=/tools \
        --build=${CLFS_HOST} \
        --host=${CLFS_TARGET}
        make
        make DESTDIR=${CLFS} install
    - util-linux: |
        NCURSESW6_CONFIG=" " \
        NCURSES6_CONFIG=" " \
        NCURSESW5_CONFIG=" " \
        NCURSES5_CONFIG=" " \
        LDFLAGS="-ltinfow" \
        ./configure \
        --prefix=/tools \
        --build=${CLFS_HOST} \
        --host=${CLFS_TARGET} \
        --disable-bash-completion \
        --disable-makeinstall-chown \
        --disable-makeinstall-setuid \
        --disable-nologin \
        --without-systemd \
        --disable-pylibmount \
        --without-python
        make
        make DESTDIR=${CLFS} install
    - nano: |
        LDFLAGS="-ltinfow" \
        ./configure \
        --prefix=/tools \
        --build=${CLFS_HOST} \
        --host=${CLFS_TARGET}
        make
        make DESTDIR=${CLFS} install
    - xz-utils: |
        ./configure \
        --prefix=/tools \
        --build=${CLFS_HOST} \
        --host=${CLFS_TARGET}
        make
        make DESTDIR=${CLFS} install
    - which: |
        ./configure \
        --prefix=/tools \
        --build=${CLFS_HOST} \
        --host=${CLFS_TARGET}
        make
        make DESTDIR=${CLFS} install
    - rsync: |
        ./configure \
        --prefix=/tools \
        --build=${CLFS_HOST} \
        --host=${CLFS_TARGET} \
        --disable-openssl \
        --disable-xxhash \
        --disable-zstd \
        --disable-lz4
        make
        make DESTDIR=${CLFS} install
    - none: |
        ln -sf ../tools/lib/ld-linux-{{gnu_arch}}.so.1 "$CLFS/lib/ld-linux-{{gnu_arch}}.so.1"

        cat > ${CLFS}/etc/profile << "PROFILE_EOF"
        # Funtoo from Scratch /etc/profile for login shells in the temporary environment.
        #
        # The following settings allow terminal-aware programs to find the terminal definitions
        # and also allow temporary tools to be found, while also allowing 'official' tools installed
        # in FHS-compliant paths to gradually replace these tools.

        export TERMINFO=/tools/share/terminfo
        export PATH=/bin:/usr/bin:/sbin:/usr/sbin:/tools/sbin:/tools/bin
        export LD_LIBRARY_PATH=/lib:/usr/lib:/tools/lib
        export HOME=/

        umask 022

        PROFILE_EOF
