fchroot:
  defaults:
    template: fchroot.tmpl
  steps:
    - linux: |
        make mrproper
        make INSTALL_HDR_PATH=/usr headers_install
        install -d /var/db/pkg/sys-kernel/linux-headers-${LINUX_VERSION}
    - perl: |
        ln -sf ../tools/bin/pwd /bin
        sh Configure -des \
          -Dcc=gcc \
          -Dprefix=/tools
        make
        make install
        install -d /var/db/pkg/dev-lang/perl-${PERL_VERSION}
    - autoconf: |
        ./configure \
        --prefix=/tools
        make
        make install
        install -d /var/db/pkg/sys-devel/autoconf-${AUTOCONF_VERSION}
    - automake: |
        ./configure \
        --prefix=/tools
        make
        make install
        install -d /var/db/pkg/sys-devel/automake-${AUTOMAKE_VERSION}
    - libtool: |
        ./configure \
        --prefix=/tools
        make
        make install
        install -d /var/db/pkg/sys-devel/libtool-${LIBTOOL_VERSION}
    - openssl: |
        install -d /usr/bin
        ln -sf ../../tools/bin/env /usr/bin
        ./config --prefix=/tools \
        --openssldir=/etc/ssl \
        --libdir=lib \
        shared \
        zlib-dynamic
        make
        make install
        install -d /var/db/pkg/dev-libs/openssl-${OPENSSL_VERSION}
    - wget: |
        ./configure \
        --prefix=/tools \
        --sysconfdir=/etc \
        --with-ssl=openssl \
        --with-libssl-prefix=/tools
        make
        make install
        install -d /var/db/pkg/net-misc/wget-${WGET_VERSION}
    - curl: |
        ./configure \
        --prefix=/tools \
        --with-openssl \
        --disable-static
        make
        make install
        install -d /var/db/pkg/net-misc/curl-${CURL_VERSION}
    - libffi: |
        ./configure \
        --prefix=/tools \
        --disable-static
        make
        make install
        install -d /var/db/pkg/dev-libs/libffi-${LIBFFI_VERSION/-/_}
    - python: |
        ./configure \
        --prefix=/tools \
        --enable-shared \
        --without-ensurepip
        make
        make install
        install -d /usr/lib/python-exec/python${PYTHON_VERSION%.*}
        ln -sf python${PYTHON_VERSION%.*}m /tools/bin/python${PYTHON_VERSION%.*}
        ln -sf python${PYTHON_VERSION%.*}m-config /tools/bin/python${PYTHON_VERSION%.*}-config
        ln -sf /tools/bin/python${PYTHON_VERSION%.*}m /usr/lib/python-exec/python${PYTHON_VERSION%.*}/python${PYTHON_VERSION%%.*}
        ln -sf python${PYTHON_VERSION%%.*} /usr/lib/python-exec/python${PYTHON_VERSION%.*}/python
        cat > /usr/lib/python-exec/python${PYTHON_VERSION%.*}/python${PYTHON_VERSION%%.*}-config << "PYTHON_EOF"
        #!/bin/sh
        exec "python${PYTHON_VERSION%%.*}-config" "\${@}"
        PYTHON_EOF
        chmod +x /usr/lib/python-exec/python${PYTHON_VERSION%.*}/python${PYTHON_VERSION%%.*}-config
        ln -sf python${PYTHON_VERSION%%.*}-config /usr/lib/python-exec/python${PYTHON_VERSION%.*}/python-config
        ln -sf /tools/bin/2to3-${PYTHON_VERSION%.*} /usr/lib/python-exec/python${PYTHON_VERSION%.*}/2to3
        ln -sf /tools/bin/pydoc${PYTHON_VERSION%.*} /usr/lib/python-exec/python${PYTHON_VERSION%.*}/pydoc
        ln -sf /tools/bin/pyvenv-${PYTHON_VERSION%.*} /usr/lib/python-exec/python${PYTHON_VERSION%.*}/pyvenv
        install -d /var/db/pkg/dev-lang/python-${PYTHON_VERSION}
    - git: |
        ./configure --prefix=/tools
        make
        make install
        install -d /var/db/pkg/dev-vcs/git-${GIT_VERSION}
    - pax-utils: |
        sed '/MPAGES/d' -i Makefile
        make CC=gcc PV=${PAX_UTILS_VERSION}
        make CC=gcc PV=${PAX_UTILS_VERSION} install
        install -d /var/db/pkg/app-misc/pax-utils-${PAX_UTILS_VERSION}
    - sandbox: |
        autoreconf -i -f
        ./configure \
        --prefix=/tools
        make
        make install
        ln -fs ../../tools/bin/sandbox /usr/bin/sandbox
        install -d /var/db/pkg/sys-apps/sandbox-${SANDBOX_VERSION}
    - none: |
        cat > /etc/passwd << "PASSWD_EOF"
        root:x:0:0:root:/root:/bin/bash
        portage:x:250:250:portage:/var/tmp/portage:/tools/bin/false
        PASSWD_EOF
        cat > /etc/group << "GROUP_EOF"
        root:x:0:root
        portage::250:portage
        GROUP_EOF
    - portage: |
        python3 setup.py build
        python3 setup.py install
        rm -f /usr/share/portage/config/repos.conf
        install -d /etc/portage
        cat > /etc/portage/make.conf << "MKCF_EOF"
        FEATURES="-pid-sandbox"
        ROOTPATH="/tools/sbin:/tools/bin"
        FETCHCOMMAND="wget --no-check-certificate -t 3 -T 60 --passive-ftp -O \"\${DISTDIR}/\${FILE}\" \"\${URI}\""
        RESUMECOMMAND="wget --no-check-certificate -c -t 3 -T 60 --passive-ftp -O \"\${DISTDIR}/\${FILE}\" \"\${URI}\""
        MKCF_EOF
        ln -sf portage/make.conf /etc/make.conf
        install -d /etc/portage/make.profile
        cat > /etc/portage/make.profile/parent << "MKP_EOF"
        core-kit:funtoo/1.0/linux-gnu/arch/{{ego_arch}}
        core-kit:funtoo/1.0/linux-gnu/arch/{{ego_arch}}/subarch/{{ego_subarch}}
        core-kit:funtoo/1.0/linux-gnu/build/current
        core-kit:funtoo/1.0/linux-gnu/flavor/core
        MKP_EOF
        install -d /var/db/pkg/sys-apps/portage-${PORTAGE_VERSION}

