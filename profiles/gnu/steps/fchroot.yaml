fchroot:
  defaults:
    template: fchroot.tmpl
  steps:
    - linux: |
        make mrproper
        make INSTALL_HDR_PATH=/usr headers_install
        install -d /var/db/pkg/sys-kernel/linux-headers-${LINUX_VERSION}
    - pkgconf: |
        ./configure \
        --prefix=/usr
        make
        make install
        ln -sf pkgconf /usr/bin/pkg-config
        install -d /var/db/pkg/dev-util/pkgconf-${PKGCONF_VERSION}
    - perl: |
        sh Configure -des \
          -Dcc=gcc \
          -Dprefix=/usr \
          -Dsiteprefix=/usr/local \
          -Dvendorprefix=/usr \
          -Dscriptdir=/usr/bin \
          -Dprivlib=/usr/lib/perl5/${PERL_VERSION} \
          -Dsitelib=/usr/local/lib/perl5/${PERL_VERSION} \
          -Dvendorlib=/usr/lib/perl5/vendor_perl/${PERL_VERSION} \
          -Dlocincpth=/usr/include \
          -Dglibpth="/lib /usr/lib" \
          -Dmyhostname='localhost'
        make
        make install
        install -d /var/db/pkg/dev-lang/perl-${PERL_VERSION}
    - autoconf: |
        ./configure \
        --prefix=/usr
        make
        make install
        install -d /var/db/pkg/sys-devel/autoconf-${AUTOCONF_VERSION}
    - automake: |
        ./configure \
        --prefix=/usr
        make
        make install
        install -d /var/db/pkg/sys-devel/automake-${AUTOMAKE_VERSION}
    - libtool: |
        ./configure \
        --prefix=/usr \
        --disable-ltdl-install
        make
        make install
        install -d /var/db/pkg/sys-devel/libtool-${LIBTOOL_VERSION}
    - openssl: |
        ./config --prefix=/usr \
        --openssldir=/etc/ssl \
        shared \
        zlib-dynamic
        make
        make install
        install -d /var/db/pkg/dev-libs/openssl-${OPENSSL_VERSION}
    - wget: |
        ./configure \
        ac_cv_libunistring=no \
        --prefix=/usr \
        --disable-assert \
        --disable-pcre \
        --disable-rpath \
        --without-included-libunistring \
        --without-libunistring-prefix \
        --with-ssl=openssl
        make
        make install
        install -d /var/db/pkg/net-misc/wget-${WGET_VERSION}
    - curl: |
        ./configure \
        --prefix=/usr \
        --with-openssl \
        --disable-static
        make
        make install
        install -d /var/db/pkg/net-misc/curl-${CURL_VERSION}
    - libffi: |
        ./configure \
        --prefix=/usr \
        --includedir=/usr/lib/libffi-${LIBFFI_VERSION/-/_}/include \
        --disable-multi-os-directory \
        --disable-static
        make
        make install
        install -d /var/db/pkg/dev-libs/libffi-${LIBFFI_VERSION/-/_}
    - python: |
        ./configure \
        --prefix=/usr \
        --enable-shared \
        --infodir=/usr/share/info \
        --mandir=/usr/share/man \
        --with-computed-gotos \
        --with-libc= \
        --enable-loadable-sqlite-extensions \
        --without-ensurepip
        make
        make install
        install -d /usr/lib/python-exec/python${PYTHON_VERSION%.*}
        ln -sf /usr/bin/python${PYTHON_VERSION%.*} /usr/lib/python-exec/python${PYTHON_VERSION%.*}/python${PYTHON_VERSION%%.*}
        ln -sf python${PYTHON_VERSION%%.*} /usr/lib/python-exec/python${PYTHON_VERSION%.*}/python
        cat > /usr/lib/python-exec/python${PYTHON_VERSION%.*}/python${PYTHON_VERSION%%.*}-config << "PYTHON_EOF"
        #!/bin/sh
        exec "python${PYTHON_VERSION%%.*}-config" "\${@}"
        PYTHON_EOF
        chmod +x /usr/lib/python-exec/python${PYTHON_VERSION%.*}/python${PYTHON_VERSION%%.*}-config
        ln -sf python${PYTHON_VERSION%%.*}-config /usr/lib/python-exec/python${PYTHON_VERSION%.*}/python-config
        ln -sf /tools/bin/2to3-${PYTHON_VERSION%.*} /usr/lib/python-exec/python${PYTHON_VERSION%.*}/2to3
        ln -sf /tools/bin/pydoc${PYTHON_VERSION%.*} /usr/lib/python-exec/python${PYTHON_VERSION%.*}/pydoc
        ln -sf /tools/bin/pyvenv-${PYTHON_VERSION%.*} /usr/lib/python-exec/python${PYTHON_VERSION%.*}/pyvenv
        install -d /var/db/pkg/dev-lang/python-${PYTHON_VERSION}
    - git: |
        ./configure \
        --prefix=/usr \
        --sysconfdir=/etc
        make
        make install
        install -d /var/db/pkg/dev-vcs/git-${GIT_VERSION}
    - pax-utils: |
        sed '/MPAGES/d' -i Makefile
        make CC=gcc PV=${PAX_UTILS_VERSION}
        make CC=gcc PV=${PAX_UTILS_VERSION} install
        install -d /var/db/pkg/app-misc/pax-utils-${PAX_UTILS_VERSION}
    - sandbox: |
        autoreconf -i -f
        ./configure \
        --prefix=/usr
        make
        make install
        install -d /var/db/pkg/sys-apps/sandbox-${SANDBOX_VERSION}
    - none: |
        cat > /etc/passwd << "PASSWD_EOF"
        root:x:0:0:root:/root:/bin/bash
        portage:x:250:250:portage:/var/tmp/portage:/bin/false
        PASSWD_EOF
        cat > /etc/group << "GROUP_EOF"
        root:x:0:root
        portage::250:portage
        GROUP_EOF
    - portage: |
        python3 setup.py build
        python3 setup.py install
        rm -f /usr/share/portage/config/repos.conf
        install -d /etc/portage
        cat > /etc/portage/make.conf << "MKCF_EOF"
        FEATURES="-pid-sandbox"
        FETCHCOMMAND="wget --no-check-certificate -t 3 -T 60 --passive-ftp -O \"\${DISTDIR}/\${FILE}\" \"\${URI}\""
        RESUMECOMMAND="wget --no-check-certificate -c -t 3 -T 60 --passive-ftp -O \"\${DISTDIR}/\${FILE}\" \"\${URI}\""
        MKCF_EOF
        ln -sf portage/make.conf /etc/make.conf
        install -d /etc/portage/make.profile
        cat > /etc/portage/make.profile/parent << "MKP_EOF"
        core-kit:funtoo/1.0/linux-gnu/arch/{{ego_arch}}
        core-kit:funtoo/1.0/linux-gnu/arch/{{ego_arch}}/subarch/{{ego_subarch}}
        core-kit:funtoo/1.0/linux-gnu/build/current
        core-kit:funtoo/1.0/linux-gnu/flavor/core
        MKP_EOF
        install -d /var/db/pkg/sys-apps/portage-${PORTAGE_VERSION}

        cat > /etc/profile << 'PROFILE_EOF'
        # This is necessary to ensure that "env-updates" run by portage don't wipe out any LDPATH setting.
        # This causes linking problems for elfutils and rhash if it happens:
        # /etc/profile: login shell setup
        #
        # That this file is used by any Bourne-shell derivative to setup the
        # environment for login shells.
        #

        # Load environment settings from profile.env, which is created by
        # env-update from the files in /etc/env.d
        if [ -e /etc/profile.env ] ; then
            . /etc/profile.env
        fi

        # You should override these in your ~/.bashrc (or equivalent) for per-user
        # settings. For system defaults, you can add a new file in /etc/profile.d/.

        export PATH=${PATH:-/usr/sbin:/usr/bin:/sbin:/bin}
        export EDITOR=${EDITOR:-/bin/nano}
        export PAGER=${PAGER:-/usr/bin/less}

        # 077 would be more secure, but 022 is generally quite realistic
        umask 022

        unset ROOTPATH

        # process *.sh files in /etc/profile.d
        for sh in /etc/profile.d/*.sh ; do
            [ -r "$sh" ] && . "$sh"
        done
        unset sh
        if [ -n "${BASH_VERSION-}" ] ; then
            # Newer bash ebuilds include /etc/bash/bashrc which will setup PS1
            # including color.  We leave out color here because not all
            # terminals support it.
            if [ -f /etc/bash/bashrc ] ; then
                # Bash login shells run only /etc/profile
                # Bash non-login shells run only /etc/bash/bashrc
                # Since we want to run /etc/bash/bashrc regardless, we source it 
                # from here.  It is unfortunate that there is no way to do 
                # this *after* the user's .bash_profile runs (without putting 
                # it in the user's dot-files), but it shouldn't make any 
                # difference.
                . /etc/bash/bashrc
            else
                PS1='\u@\h \w \$ '
            fi
        else
            # Setup a bland default prompt.  Since this prompt should be useable
            # on color and non-color terminals, as well as shells that don't
            # understand sequences such as \h, don't put anything special in it.
            PS1="${USER:-$(whoami 2>/dev/null)}@$(uname -n 2>/dev/null) \$ "
        fi
        PROFILE_EOF

        install -d /etc/env.d

        cat > /etc/env.d/50baselayout << 'LD_EOF'
        # /etc/env.d/50baselayout
        PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/bin"
        ROOTPATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/bin"
        MANPATH="/usr/local/share/man:/usr/share/man"
        INFOPATH="/usr/share/info"
        CONFIG_PROTECT_MASK="/etc/gentoo-release"
        LDPATH='/lib:/usr/lib:/usr/local/lib'
        LD_EOF

        cat > /etc/env.d/00basic << 'BASIC_EOF'
        LANG="en_US.UTF-8"
        LC_COLLATE="POSIX"
        BASIC_EOF

        source /etc/profile
        /usr/sbin/env-update
        test -e /etc/ld.so.conf
        test -e /etc/ld.so.cache


