fchroot:
  defaults:
    template: stage1.tmpl
  steps:
    - ego: |
        install -d /usr/share/ego
        cp -r modules* python /usr/share/ego/
        rm /usr/share/ego/modules*/upgrade*
        rm -rf /usr/share/ego/python/test
        chmod +x /usr/share/ego/modules/*.ego
        cp ego /usr/bin/
        ln -sf ego /usr/bin/epro
        ln -sf ego /usr/bin/edoc
        cat > /etc/ego.conf << "EGO_EOF"
        [global]
        release = next
        EGO_EOF
        install -d /var/db/pkg/app-admin/ego-${EGO_VERSION}
        ego sync
    - none: |
        # Do this before setting ROOT:
        /usr/sbin/env-update
        /sbin/ldconfig
        source /etc/profile
        export CONFIG_PROTECT="-*"
        export PYTHON_ABIS="$(portageq envvar PYTHON_ABIS)"
        export FEATURES="-pid-sandbox nodoc noman noinfo"

        # remove to prevent binutils mistakenly linking against this, which is non-PIC and won't work.
        rm -f /usr/lib/libiberty.a
        emerge --jobs=3 binutils

        # since we don't have gcc-config running, which manages and sets up typical symlinks that ebuilds
        # expect to find for certain things, we need to make sure this one is created manually. Without this,
        # rust can't link and dev-python/cryptography fails to build.

        if [ ! -e /usr/bin/cc ]; then
          ( cd /usr/bin; ln -s gcc cc )
        fi

        # If ncurses is built with libtinfo (i.e. USE="tinfo"), then libtinfo will exist, and bash will
        # currently automatically link against it even if we tell it to just use ncurses (see FL-10034).
        # So, if libtinfo is on this filesystem, then we want ncurses with USE="tinfo" on the stage1root.
        # For now, I think I will address this by syncing with funtoo norms and ensuring ncurses is
        # built with libtinfo disabled.

        # The pre-built util-linux doesn't install libmount, which is required by glib. If we don't merge 
        # util-linux officially, glib will think libmount is installed but glib meson configure will fail
        # when the lib isn't found:

        emerge --jobs=3 util-linux

        export ROOT=/tmp/stage1root
        rm -rf $ROOT
        install -m 0755 -d $ROOT/usr/bin
        install -m 0755 -d $ROOT/bin
        # also fix a lib issue -- did I miss some steps from metro?
        install -m 0755 -d $ROOT/lib64
        ln -sf lib64 $ROOT/lib
        install -m 0755 -d $ROOT/usr/lib
        ln -sf lib $ROOT/usr/lib64
        install -d ${ROOT}/{proc,sys,dev}
        # create symlink to real meta-repo to allow ego to pick up profiles inside ROOT...
        install -m 0755 -o 250 -g 250 -d $ROOT/var/git
        install -d ${ROOT}/etc
        ln -sf /var/git/meta-repo $ROOT/var/git/
        ln -sf /etc/portage ${ROOT}/etc/
        ego profile mix-in +stage1
        # fix a circular dep
        install -d /var/db/pkg/sys-apps/openrc-9999
        # fix a required USE flag
        install -d /etc/portage/package.use
        echo "dev-libs/libxml2 python" > /etc/portage/package.use/libxml2
        # It's important to merge baselayout first so it can set perms on key dirs
        emerge --nodeps baselayout

        TO_BUILD="
          app-arch/bzip2
          app-arch/gzip
          app-arch/tar
          app-arch/xz-utils
          app-shells/bash
          net-misc/rsync
          net-misc/wget
          sys-devel/autoconf
          sys-devel/automake
          sys-devel/libtool
          sys-apps/coreutils
          sys-apps/diffutils
          sys-apps/file
          sys-apps/findutils
          sys-apps/gawk
          sys-apps/grep
          sys-apps/less
          sys-apps/net-tools
          sys-apps/sed
          sys-apps/texinfo
          sys-devel/binutils
          sys-devel/bison
          sys-devel/flex
          sys-devel/gcc
          sys-devel/gettext
          sys-devel/gnuconfig
          sys-devel/make
          sys-devel/patch
          sys-libs/pam
          virtual/editor
          virtual/libc
          virtual/os-headers
          virtual/package-manager
          sys-apps/openrc"

        emerge -u --noreplace --oneshot --onlydeps --jobs=3 $TO_BUILD
        gcc-config 1
        ego profile mix-in -stage1
